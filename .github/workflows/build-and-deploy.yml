name: build-and-deploy

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

env:
  AWS_REGION: "eu-west-1"
  ECS_CLUSTER: "actrafer"
  ECS_SERVICE: "actrafer-nginx"
  ECR_REPOSITORY: "actrafer-nginx"
  TASK_DEFINITION: "actrafer-nginx"
  CONTAINER_NAME: "actrafer-nginx"

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Git Hash
        run: echo "GIT_SHORT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set ENV Variables master
        if: endsWith(github.ref, '/master')
        run: |
          echo "ENV=master" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Overwrite ENV Variables
        id: vars
        run: |
          echo "ECS_CLUSTER=${{ env.ECS_CLUSTER }}" >> $GITHUB_ENV
          echo "ECS_SERVICE=${{ env.ECS_SERVICE }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}" >> $GITHUB_ENV
          echo "TASK_DEFINITION=${{ env.TASK_DEFINITION }}" >> $GITHUB_ENV
          echo "CONTAINER_NAME=${{ env.CONTAINER_NAME }}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        id: docker
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ env.ECR_REPOSITORY }}
          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com
          tags: ${{ env.GIT_SHORT_HASH }}, latest_${{ env.ENV }}

      - name: Download Task Definition
        run: aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION }}  --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.GIT_SHORT_HASH }}

      - name: Show Task Definition to Deploy
        run: cat ${{ steps.task-def.outputs.task-definition }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true